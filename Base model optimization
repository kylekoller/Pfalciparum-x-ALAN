### load data and packages ###
setwd("C:/Users/kylek/Dropbox/RegWork/Malaria")
df <- read.csv('mdata_concise.csv', header = TRUE, fileEncoding = 'UTF-8-BOM')
library(mgcv); library(dplyr)l; library(ggplot2)
set.seed(888)

## base model with single smooth for space and month as RE ##
bm.gam <- gam(Pf_per ~ s(Month, bs = "re") + s(Latitude.x, Longitude.y), data = df, method = "REML")

## trying our different smoothing terms on the spatial variable ##

s2 <- gam(Pf_per ~ s(Month, bs = "re") + s(Latitude.x) + s(Longitude.y), data = df, method = "REML")
s1s2 <- gam(Pf_per ~ s(Month, bs = "re") + s(Latitude.x) + s(Longitude.y) +  s(Latitude.x, Longitude.y), data = df, method = "REML")
s2ti <- gam(Pf_per ~ s(Month, bs = "re") + s(Latitude.x) + s(Longitude.y) + ti(Latitude.x, Longitude.y), data = df, method = "REML")
te <- gam(Pf_per ~ s(Month, bs = "re") + te(Latitude.x, Longitude.y), data = df, method = "REML")
t2 <- gam(Pf_per ~ s(Month, bs = "re") + s(Latitude.x) + s(Longitude.y) + t2(Latitude.x, Longitude.y), data = df, method = "REML")

## compare deviance ##

deviance(bm.gam)
deviance(s2)
deviance(s1s2)
deviance(s2ti)
deviance(te)
deviance(t2)

## s1s2 seems to fit best ##

## view model fits and performance ##

summary(s1s2)
## only 58.7 deviance explained ##

gam.check(s1s2)
## spatial terms are significant and many 0 values are being overestimated ##

## try zero-inflated poisson model instead?? ##

## transform response variable to integers ##

trans.Pf.per <- df$Pf_per*100
df$trans.Pf.per <- round(trans.Pf.per)

## fit ziP model with best working smoother ##

working.gam <- working <- gam(trans_pf_per ~ s(Month, bs = "re") + s(Latitude.x) + s(Longitude.y) +  s(Latitude.x, Longitude.y), family = ziP(), data = df, method = "REML")
deviance(working.gam)
## = 6108 ... dont really know if that is good or bad ... ##

summary(working.gam)
## 74.2% of deviance explained ##

gam.check(working.gam)
## seems to fit better ##

## re-check with the different smoothing terms ##
s1 <- gam(trans.Pf.per ~ s(Month, bs = "re") + s(Latitude.x, Longitude.y), family = ziP(), data = df, method = "REML")
s2 <- gam(trans.Pf.per ~ s(Month, bs = "re") + s(Latitude.x) + s(Longitude.y), family = ziP(), data = df, method = "REML")
s1s2 <- gam(trans.Pf.per ~ s(Month, bs = "re") + s(Latitude.x) + s(Longitude.y) +  s(Latitude.x, Longitude.y), family = ziP(), data = df, method = "REML")
s2ti <- gam(trans.Pf.per ~ s(Month, bs = "re") + s(Latitude.x) + s(Longitude.y) + ti(Latitude.x, Longitude.y), family = ziP(), data = df, method = "REML")
te <- gam(trans.Pf.per ~ s(Month, bs = "re") + te(Latitude.x, Longitude.y), family = ziP(), data = df, method = "REML")
t2 <- gam(trans.Pf.per ~ s(Month, bs = "re") + s(Latitude.x) + s(Longitude.y) + t2(Latitude.x, Longitude.y), family = ziP(), data = df, method = "REML")

## now the t2 term is the best fitting! ##
working <- t2
gam.check(working)

## spatial terms are still significant ... mess with the k parameter ##
working <- gam(trans.Pf.per ~ s(Month, bs = "re") + s(Latitude.x, k = 40) + s(Longitude.y, k = 40) + t2(Latitude.x, Longitude.y), family = ziP(), data = df, method = "REML")
deviance(working)
## deviance down a lot ##
summary(working)
## 80.6 deviance explained ##
gam.check(working)
## looking MUCH better ##

## smallest K terms with no significance ##
working <- gam(trans_pf_per ~ s(Month, bs = "re") + s(Latitude.x) + s(Longitude.y) +  s(Latitude.x, Longitude.y), family = ziP(), data = df, method = "REML")






